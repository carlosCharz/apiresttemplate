<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.wifiesta</groupId>
	<artifactId>apiresttemplate</artifactId>
	<version>1.0.0</version>
	<packaging>war</packaging>
	<name>Spring Boot Project with Maven</name>
	<description>This is a Spring Boot Rest template project that handle the application properties per environment using Maven profiles.</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<tomcat.version>8.5.56</tomcat.version> <!-- activates spring boot internal servlet configuration when used as auto executable -->
		<orika.version>1.5.4</orika.version>
		<swagger2.version>2.9.2</swagger2.version>
	</properties>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.1.RELEASE</version>
		<!-- https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.3.0-M1-Release-Notes -->
	</parent>

	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-aop</artifactId>
    	</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope> <!-- provided by custom Tomcat -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Documentation -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger2.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger2.version}</version>
		</dependency>
		<!-- Orika bean mapper -->
		<dependency>
    		<groupId>ma.glasnost.orika</groupId>
    		<artifactId>orika-core</artifactId>
    		<version>${orika.version}</version>
		</dependency>
	</dependencies>
	
	<!-- Maven profile per environment -->
	<profiles>
		<profile>
			<id>local</id>
			<activation>
			   <activeByDefault>true</activeByDefault>
		    </activation>
			<properties>
				<overrides.props.file>local.overrides.properties</overrides.props.file>
				<current.profile>local</current.profile>
				<spring.profiles.active>local</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<properties>
				<overrides.props.file>dev.overrides.properties</overrides.props.file>
				<current.profile>dev</current.profile>
				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<overrides.props.file>test.overrides.properties</overrides.props.file>
				<current.profile>test</current.profile>
				<spring.profiles.active>test</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>qa</id>
			<properties>
				<overrides.props.file>qa.overrides.properties</overrides.props.file>
				<current.profile>qa</current.profile>
				<spring.profiles.active>qa</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<overrides.props.file>prod.overrides.properties</overrides.props.file>
				<current.profile>prod</current.profile>
				<spring.profiles.active>prod</spring.profiles.active>
			</properties>
		</profile>
	</profiles>

	<build>
		<finalName>apiresttemplate</finalName>
		<!-- Maven Resources. It handles the copying of project resources to the output directory. -->
		<resources>
        	<resource>
            	<directory>src/main/resources</directory>
           		<filtering>true</filtering>
           		<excludes>
					<exclude>profiles/*</exclude>
				</excludes>
        	</resource>
    	</resources>
    	<!-- Maven filtering. The variables are included in the resources ( ${..} or @...@ delimiters) -->
    	<filters>
			<filter>src/main/resources/profiles/${overrides.props.file}</filter>
		</filters>
		<plugins>
			<!-- Spring boot maven plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- Ant plugin to print the current maven profile -->
			<plugin>
            	<artifactId>maven-antrun-plugin</artifactId>
            	<executions>
                	<execution>
                	<!-- The following line is to avoid the PluginManagement section. This execution will be executed on every Project Configuration update. See this: https://www.eclipse.org/m2e/documentation/release-notes-17.html -->
                	<?m2e execute onConfiguration?>
                    	<phase>generate-resources</phase>
                    	<goals>
                        	<goal>run</goal>
                    	</goals>
                    	<configuration>
							<target>
								<echo>Current maven active profile: ${current.profile}</echo>
								<echo>Current spring active profile: ${spring.profiles.active}</echo>
							</target>
                    	</configuration>
                	</execution>
            	</executions>
        	</plugin>
		</plugins>
	</build>
</project>
